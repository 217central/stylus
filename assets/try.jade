!!! 5
html
  head
    title Stylus
    link(rel='stylesheet', href='try.css')
    meta(http-equiv='Content-Type', content='text/html; charset=utf-8')
    link(rel='stylesheet', href='codemirror.css')
    script(src='jquery.js')
    script(src='stylus.js')
    script(src='codemirror.js')
    script(src='css-mode.js')
    script(src='try.js')
  body
    #container
      include top
      #content
        .example
          h2 Nesting
          p Selector nesting enables you to keep your styles DRY:
          textarea.stylus
            body {
              font: 14px/1.5 Helvetica, arial, sans-serif;
              #logo {
                border-radius: 5px;
              }
            }
          textarea.css

        .example
          h2 Flexible syntax
          p Semi-colons, colons, and braces are optional:
          textarea.stylus
            body
              font 14px/1.5 Helvetica, arial, sans-serif
              button
              button.button
              input[type='button']
              input[type='submit']
                border-radius 5px
          textarea.css

        .example
          h2 Parent reference
          p The parent reference operator inspired by SASS is also available:
          textarea.stylus
            ul
              li a
                display: block
                color: blue
                padding: 5px
                &:hover
                  color: red
          textarea.css

        .example
          h2 Mixins
          p.
            Stylus mixins allow you to define reusable
            functionality by defining in-language functions
            which can be called from within blocks:
          textarea.stylus
            border-radius(val)
              -webkit-border-radius: val
              -moz-border-radius: val
              border-radius: val

            body {
              font: 14px/1.5 Helvetica, arial, sans-serif;
              #logo {
                border-radius(5px);
              }
            }
          textarea.css

        .example
          h2 Transparent mixins
          p.
            Transparent mixins are unique to Stylus,
            and are a incredibly powerful way enhance your stylesheets. Here all the arguments
            passed are simply assigned to three properties.
          textarea.stylus
            border-radius()
              -webkit-border-radius: arguments
              -moz-border-radius: arguments
              border-radius: arguments

            body {
              font: 14px/1.5 Helvetica, arial, sans-serif;
              #logo {
                border-radius: 5px 10px;
              }
            }
          textarea.css

        .example
          h2 Variables
          p.
            Stylus variables behave as you would expect in any other language,
            and may optionally be prefixed by the "$" character:
          textarea.stylus
            #prompt
              position: absolute
              top: 150px
              left: 50%
              width: w = 200px
              margin-left: -(w / 2)
          textarea.css

        .example
          h2 Block property access
          p.
            Stylus property access provides easy access to values
            defined within the current block.
          textarea.stylus
            #prompt
              position: absolute
              top: 150px
              left: 50%
              width: 200px
              margin-left: -(@width / 2)
          textarea.css

        .example
          h2 Robust full-featured language
          p.
            Stylus is not just a pre-processor,
            it's is a flexible and powerful language. Combined with
            the concept of transparent mixins you can create robust
            cross-browser support, or simply making your life easier
            with customized CSS properties as shown below:
          textarea.stylus
            -pos(type, args)
              i = 0
              position: unquote(type)
              {args[i]}: args[i + 1] is a 'unit' ? args[i += 1] : 0
              {args[i += 1]}: args[i + 1] is a 'unit' ? args[i += 1] : 0

            absolute()
              -pos('absolute', arguments)

            fixed()
              -pos('fixed', arguments)

            #prompt
              absolute: top 150px left 5px
              width: 200px
              margin-left: -(@width / 2)

            #logo
              fixed: top left
          textarea.css

        .example
          h2 Iteration
          p List iteration with Stylus is simple:
          textarea.stylus
            table
              for row in 1 2 3 4 5
                tr:nth-child({row})
                  height: 10px * row
          textarea.css

        .example
          h2 Interpolation
          p.
            Interpolation combined with other powerful features
            allow you to mold properties and selectors all within
            the language itself.

          textarea.stylus
            vendors = webkit moz o ms official

            border-radius()
              for vendor in vendors
                if vendor == official
                  border-radius: arguments
                else
                  -{vendor}-border-radius: arguments
            #content
              border-radius: 5px
          textarea.css

        .example
          h2 Operators
          p.
            Stylus supports all the <a href="docs/operators.html">operators</a>
            you've come to expect from a language, as well as some specific to Stylus.

          textarea.stylus
            body
              foo: 5px + 10
              foo: 2 ** 8
              foo: 5px * 2
              foo: !!''
              foo: foo and bar and baz
              foo: foo or bar or baz
              foo: 1..5
              foo: 1...5
              foo: (1 2 3) == (1 2 3)
              foo: (1 2 3) == (1 2)
              foo: ((one 1) (two 2)) == ((one 1) (two 2)) 
              foo: ((one 1) (two 2)) == ((one 1) (two)) 
              foo: ((one 1) (two 2))[0]
              foo: 3 in (1 2 3 4)

          textarea.css
        
          p.
            Type coercion is performed when appropriate:
          
          textarea.stylus
            body
              foo: foo + bar
              foo: 'foo ' + bar
              foo: 'foo ' + 'bar'
              foo: 'foo ' + 5px
              foo: 2s - 500ms

          textarea.css